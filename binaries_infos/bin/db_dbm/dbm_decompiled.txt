//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
// Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
//

#include <fcntl.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#include <unistd.h>

// ------------------------ Structures ------------------------

struct _IO_FILE {
    int32_t e0;
    char * e1;
    char * e2;
    char * e3;
    char * e4;
    char * e5;
    char * e6;
    char * e7;
    char * e8;
    char * e9;
    char * e10;
    char * e11;
    struct _IO_marker * e12;
    struct _IO_FILE * e13;
    int32_t e14;
    int32_t e15;
    int32_t e16;
    int16_t e17;
    char e18;
    char e19[1];
    char * e20;
    int64_t e21;
    char * e22;
    char * e23;
    char * e24;
    char * e25;
    int32_t e26;
    int32_t e27;
    char e28[40];
};

struct _IO_FILE_1 {
    int32_t e0;
    char * e1;
    char * e2;
    char * e3;
    char * e4;
    char * e5;
    char * e6;
    char * e7;
    char * e8;
    char * e9;
    char * e10;
    char * e11;
    struct _IO_marker_1 * e12;
    struct _IO_FILE_1 * e13;
    int32_t e14;
    int32_t e15;
    int32_t e16;
    int16_t e17;
    char e18;
    char e19[1];
    char * e20;
    int64_t e21;
    char * e22;
    char * e23;
    char * e24;
    char * e25;
    int32_t e26;
    int32_t e27;
    char e28[40];
};

struct _IO_marker {
    struct _IO_marker * e0;
    struct _IO_FILE * e1;
    int32_t e2;
};

struct _IO_marker_1 {
    struct _IO_marker_1 * e0;
    struct _IO_FILE_1 * e1;
    int32_t e2;
};

// ------------------- Function Prototypes --------------------

int32_t file_search(struct _IO_FILE_1 * pFile, char * p_search_string, char * get_str, char is_need_quotation_mask);
int32_t tcl_com_fifo_init(void);
int32_t tcl_fifo_write(char * buf, int32_t size);

// --------------------- Global Variables ---------------------

char * p_db_search_str = "\xf0\x91";

// ------------------------ Functions -------------------------

// From module:   /home/huanggb/temp/serial/nov_serial_ap/code/tcl_serial_translate.c
// Address range: 0x8e48 - 0x8f83
// Line range:    25 - 31
int32_t file_search(struct _IO_FILE_1 * pFile, char * p_search_string, char * get_str, char is_need_quotation_mask) {
    int32_t v1; // 0x11214
    int32_t * v2; // 0x11304
    char ** v3; // 0x11398
    // 0x8e48
    puts("@@[file_search] pointer is NULL , return");
    return -1;
}

// From module:   /home/huanggb/temp/serial/nov_serial_ap/code/tcl_serial_translate.c
// Address range: 0x8f84 - 0x8fcf
// Line range:    164 - 181
int32_t tcl_com_fifo_init(void) {
    int32_t v1; // 0x11214
    int32_t * v2; // 0x11304
    char ** v3; // 0x11398
    int32_t result = access("/data/com_fifo_mid\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", F_OK); // 0x8f8e
    if (result != -1) {
        // 0x8f98
        return 0;
    }
    int32_t v4 = mkfifo((char *)(int32_t)"/data/com_fifo_mid\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 511); // 0x8fa2
    printf("res=%d\n", v4);
    if (v4 > 0xffffffff) {
        // 0x8f98
        return 0;
    }
    // 0x8fb6
    puts("\r db fifo create failed!");
    return result;
}

// From module:   /home/huanggb/temp/serial/nov_serial_ap/code/tcl_serial_translate.c
// Address range: 0x8fd0 - 0x900b
// Line range:    183 - 192
int32_t tcl_fifo_write(char * buf, int32_t size) {
    int32_t v1; // 0x11214
    int32_t * v2; // 0x11304
    char ** v3; // 0x11398
    int32_t fd = open("/data/com_fifo_mid\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", O_WRONLY);
    if (fd < 0) {
        // 0x8ff6
        puts("open fifo error!");
        return -2;
    }
    // 0x8fe4
    write(fd, (char *)(int32_t)buf, size);
    close(fd);
    return 0;
}

// From module:   /home/huanggb/temp/serial/nov_serial_ap/code/tcl_serial_translate.c
// Address range: 0x8900 - 0x89c3
// Line range:    202 - 221
int main(int argc, char ** argv) {
    int32_t v1 = 1; // 0x11214
    int32_t * v2 = &v3; // 0x11304
    char ** v4 = &p_db_search_str; // 0x11398
    int32_t str;
    int32_t v5 = &str; // 0x8908_0
    if (argc < 2) {
        // 0x8992
        puts("please input: command  value");
        // branch -> 0x898a
    } else {
        struct _IO_FILE * file = fopen("run_config", "r"); // 0x891a
        if (file == NULL) {
            // 0x899c
            puts("failed to open db config file,use default fifo path");
            // branch -> 0x893a
        } else {
            int32_t v6 = *(int32_t *)&v4; // 0x892a
            file_search((struct _IO_FILE_1 *)file, (char *)v6, "/data/com_fifo_mid\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00", 0);
            fclose((struct _IO_FILE *)(int32_t)file);
            // branch -> 0x893a
        }
        // 0x893a
        char * str3;
        int32_t str2; // 0x893a
        if (str2 == 0) {
            // 0x893a
            str3 = (char *)&str;
            // branch -> 0x8946
        } else {
            // 0x8940
            strcpy((char *)&str, (char *)str2);
            str3 = (char *)&str;
            // branch -> 0x8946
        }
        // 0x8946
        tcl_com_fifo_init();
        int32_t v7 = 2; // 0x8960
        int32_t v8 = (int32_t)argv + 4; // 0x895a
        // branch -> 0x895a
        while (true) {
            int32_t v9 = v7 + 1; // 0x8960
            int32_t str4; // 0x895a
            if (str4 != 0) {
                // 0x8964
                strcpy((char *)(strlen(str3) + 1 + v5), (char *)str4);
                // branch -> 0x8978
            }
            // 0x8978
            if (v9 == argc) {
                // 0x897c
                tcl_fifo_write(str3, strlen(str3));
                // branch -> 0x898a
                // 0x898a
                return 0;
            }
            // 0x8978
            v7 = v9;
            v8 += 4;
            // branch -> 0x895a
        }
    }
    // 0x898a
    return 0;
}

// --------------- Dynamically Linked Functions ---------------

// int access(const char * name, int type);
// int close(int fd);
// int fclose(FILE * stream);
// FILE * fopen(const char * restrict filename, const char * restrict modes);
// int mkfifo(const char * path, __mode_t mode);
// int open(const char * file, int oflag, ...);
// int printf(const char * restrict format, ...);
// int puts(const char * s);
// char * strcpy(char * restrict dest, const char * restrict src);
// size_t strlen(const char * s);
// ssize_t write(int fd, const void * buf, size_t n);

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: gcc (4.7.3)
// Detected language: C
// Detected functions: 4
// Decompiler release: v2.2.1 (2016-09-07)
// Decompilation date: 2018-02-15 15:51:47
